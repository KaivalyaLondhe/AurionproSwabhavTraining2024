package com.aurionpro.model;

import java.util.Scanner;

public class Board {
    static Scanner scanner = new Scanner(System.in);
    private char[][] board;
    private Player currentPlayer;

    public Board() {
        this.board = initializeBoard();
        this.currentPlayer = new Player('X'); // Player 'X' starts
    }

    private char[][] initializeBoard() {
        char[][] newBoard = new char[3][3];
        for (int i = 0; i < newBoard.length; i++) {
            for (int j = 0; j < newBoard[i].length; j++) {
                newBoard[i][j] = '-';
            }
        }
        return newBoard;
    }

    public void printBoard() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + "\t");
            }
            System.out.println();
        }
    }

    public boolean isBoardFull() {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }

    public boolean checkWin() {
        char symbol = currentPlayer.getSymbol();

        // Check rows and columns
        for (int i = 0; i < board.length; i++) {
            if ((board[i][0] == symbol && board[i][1] == symbol && board[i][2] == symbol)
                    || (board[0][i] == symbol && board[1][i] == symbol && board[2][i] == symbol)) {
                return true;
            }
        }

        // Check diagonals
        return (board[0][0] == symbol && board[1][1] == symbol && board[2][2] == symbol)
                || (board[0][2] == symbol && board[1][1] == symbol && board[2][0] == symbol);
    }

    public void introduction() {
        System.out.println("Welcome to the Tic Tac Toe game!!!");
        System.out.println("Player 1 plays with 'X'");
        System.out.println("Player 2 plays with 'O'");
        System.out.println("Let's begin!");
        printBoard();
    }

    public void gameLogic() {
        boolean gameOn = true;
        while (gameOn) {
            int row, column;
            boolean validMove;

            // Player's turn
            do {
                String playerTurn;
                if (currentPlayer.getSymbol() == 'X') {
                    playerTurn = "Player 1's turn.";
                    return;
                }  {
                    playerTurn = "Player 2's turn.";
                }
                System.out.println(playerTurn);
                System.out.print("Enter row number (1-3): ");
                row = scanner.nextInt() - 1;
                System.out.print("Enter column number (1-3): ");
                column = scanner.nextInt() - 1;

                validMove = (row >= 0 && row < 3 && column >= 0 && column < 3 && board[row][column] == '-');
                if (!validMove) {
                    System.out.println("Invalid move. Try again.");
                } else {
                    currentPlayer.play(row, column, board);
                    printBoard();
                    if (checkWin()) {
                        if (currentPlayer.getSymbol() == 'X') {
                            System.out.println("Player 1 wins!");
                        } else {
                            System.out.println("Player 2 wins!");
                        }
                        gameOn = false;
                    } else if (isBoardFull()) {
                        System.out.println("It's a draw!");
                        gameOn = false;
                    } else {
                        currentPlayer.playerSwitch();
                    }
                }
            } while (!validMove);
        }
    }
}
